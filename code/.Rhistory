setwd("C:/Users/ksors/Desktop/Stat302/FinalProject/code")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
statcast <- read_csv("../data/stats.csv")
statcast <- statcast %>%
mutate(opsPlus = (on_base_percent / mean(on_base_percent) +
slg_percent / mean(slg_percent) - 1) * 100) %>%
mutate(ozSwingGroup = cut(oz_swing_percent, c(10, 20, 30, 40, 50)))
linMod <- lm(opsPlus ~ oz_swing_percent, data = statcast)
summary(linMod)
ggplot(statcast, aes(oz_swing_percent, opsPlus)) +
geom_point() +
geom_smooth(method = "lm")
summary(linMod)
nrow(statcast)
nrow(statcast) * .9
statTest <- statcast[1:1592,]
statTrain <- statcast[1:1592,]
statTest <- statcast[1593:nrow(statcast),]
# Mutating statcast dataframe to include OPS+ and groupings of plate approach
statcast <- statcast %>%
mutate(opsPlus = (on_base_percent / mean(on_base_percent) +
slg_percent / mean(slg_percent) - 1) * 100) %>%
mutate(ozSwingGroup = cut(oz_swing_percent, c(10, 20, 30, 40, 50)))
# Reading in the statcast data
statcast <- read_csv("../data/stats.csv")
# Reading in the statcast data
statcast <- read_csv("../data/stats.csv")
``` {r}
# Mutating statcast dataframe to include OPS+ and groupings of plate approach
statcast <- statcast %>%
mutate(opsPlus = (on_base_percent / mean(on_base_percent) +
slg_percent / mean(slg_percent) - 1) * 100) %>%
mutate(ozSwingGroup = cut(oz_swing_percent, c(10, 20, 30, 40, 50)))
statTrain <- statcast[1:1592,]
statTest <- statcast[1593:nrow(statcast),]
# root mean squared error for true y and prediction yhat
rmse <- function(y,yhat) sqrt(mean((y-yhat)^2))
opsMod <- aov(opsPlus ~ ozSwingGroup, data = statTrain)
summary(opsMod)
statcast <- statcast[sample(nrow(statcast)),]
# Mutating statcast dataframe to include OPS+ and groupings of plate approach
statcast <- statcast %>%
mutate(opsPlus = (on_base_percent / mean(on_base_percent) +
slg_percent / mean(slg_percent) - 1) * 100) %>%
mutate(ozSwingGroup = cut(oz_swing_percent, c(10, 20, 30, 40, 50)))
statTrain <- statcast[1:1592,]
statTest <- statcast[1593:nrow(statcast),]
opsMod <- aov(opsPlus ~ ozSwingGroup, data = statTrain)
summary(opsMod)
rmse(statTest, predict(opsMod, data = statTest))
predict(opsMod)
predict(opsMod, statTest)
rmse(statTest, predict(opsMod, statTest))
linMod <- lm(opsPlus ~ oz_swing_percent, data = statTrain)
summary(linMod)
rmse(statTest$opsPlus, predict(linMod, statTest))
rmse(statTest$opsPlus, predict(opsMod, statTest))
paste("RMSE:", rmse(statTest$opsPlus, predict(opsMod, statTest)))
paste("RMSE:", rmse(statTest$opsPlus, predict(linMod, statTest)))
# Creating train and test data sets (90% and 10%)
set.seed(123)
statTrain <- statcast[1:1592,]
statTest <- statcast[1593:nrow(statcast),]
statTrain <- statcast[1:1592,]
statTest <- statcast[1593:nrow(statcast),]
opsMod <- aov(opsPlus ~ ozSwingGroup, data = statTrain)
summary(opsMod)
# Reading in the statcast data
statcast <- read_csv("../data/stats.csv")
# Shuffling data for train/test splitting
set.seed(123)
statcast <- statcast[sample(nrow(statcast)),]
# Mutating statcast dataframe to include OPS+ and groupings of plate approach
statcast <- statcast %>%
mutate(opsPlus = (on_base_percent / mean(on_base_percent) +
slg_percent / mean(slg_percent) - 1) * 100) %>%
mutate(ozSwingGroup = cut(oz_swing_percent, c(10, 20, 30, 40, 50)))
# Creating train and test data sets (90% and 10%)
statTrain <- statcast[1:1592,]
statTest <- statcast[1593:nrow(statcast),]
opsMod <- aov(opsPlus ~ ozSwingGroup, data = statTrain)
summary(opsMod)
linMod <- lm(opsPlus ~ oz_swing_percent, data = statTrain)
summary(linMod)
